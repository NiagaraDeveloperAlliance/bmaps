/* Module Build File */

description = "TridiumAP Baidu Maps for Niagara 4"

ext {
}

niagaraModule {
    moduleName = "bmaps"
    preferredSymbol = "bm"
    runtimeProfile = "ux"
}

dependencies {
    compile "Tridium:nre:4.7"
    compile "Tridium:baja:4.7"
    compile "Tridium:gx-wb:4.7"
    compile "Tridium:bajaui-wb:4.7"
    compile "Tridium:web-rt:4.7"
    compile "Tridium:js-ux:4.7"
    compile "Tridium:bajaux-rt:4.7"
    compile "Tridium:bajaux-ux:4.7"
}

jar {
    from('src') {
        include 'rc/**/*.hbs'
        include 'rc/**/*.js'
        include 'rc/**/*.css'
        include 'rc/**/*.png'
        include 'rc/**/*.gif'
        include 'rc/**/*.jpg'
    }
}

niagaraRjs {
  builds = [
    'bmaps': [
      rootDir: 'src/rc',
      include: [
        'nmodule/bmaps/rc/BMapsWidget'
      ]
    ]
  ]

  options = [
    //BajaScript and lexicons cannot legitimately start without running a
    //station, so disable these plugins outright. Note that this not a standard
    //r.js option - it's only used by the niagara-rjs plugin.
    disablePlugins: [ 'baja', 'lex', 'log', 'css' ],

    //If you're sharing this code with other modules that use Handlebars,
    //it's likely these libraries will already be in the browser cache, so
    //it makes sense to exclude them from the build. If you're certain this
    //will be a standalone app, it's okay to include these libraries in the
    //final build to save a few HTTP calls on first load.
    exclude: [ 'Handlebars', 'underscore', 'hbs' ],

    //I18N in the require-handlebars-plugin is not currently supported for
    //Niagara and must be manually disabled.
    //Auto-registration of helpers expects them to be in the /template/helpers
    //directory. It's best to disable this and explicitly register your
    //helpers with Handlebars.registerHelper().
    hbs: [
      disableHelpers: true,
      disableI18n: true
    ],

    //Set up paths the build needs to know about.
    paths: [
      //Point bmaps module at src directory, using the nmodule convention
      'nmodule/bmaps': 'src',

      //exclude jquery/bajaux/Promise altogether
      'jquery': 'empty:',
      'bajaux': 'empty:',
      'Promise': 'empty:',
      'nmodule/webEditors': 'empty:',


      //make Handlebars and associated libraries available to run during the
      //build process, as templates will be precompiled.
      //Note that if you need to pull module resources from other modules,
      //they must be included in the Gradle file as compile-time dependencies.
      'Handlebars': moduleResource('js-ux', 'rc/handlebars/handlebars-v4.0.6'),
      'hbs': moduleResource('js-ux', 'rc/require-handlebars-plugin/hbs'),
      'i18nprecompile': moduleResource('js-ux', 'rc/require-handlebars-plugin/hbs/i18nprecompile'),
      'json2': moduleResource('js-ux', 'rc/require-handlebars-plugin/hbs/json2'),
      'underscore': moduleResource('js-ux', 'rc/underscore/underscore')
    ],

    // RequireJS optimization with Rhino can occasionally cause a stack
    // overflow if a module is particularly complex and the default JVM stack
    // size is set too low. Adjust stack size as needed.
    rhinoJvmArgs: [ '-Xss4m' ]
  ]
}